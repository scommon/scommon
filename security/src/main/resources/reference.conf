sandbox {
  default = scala-security-profile
  profiles = [{
    name = scala-security-profile
    enable-home-dir = true
    enable-temp-dir = true
    enable-work-dir = true
    allow-file-permissions = [
    ]
    packages-for-app-loader = [
      sun.reflect,
      org.scommon,
      scala
    ]
    allow-packages = [
      java.lang,
      java.io,
      java.math,
      java.net,
      java.nio,
      java.security,
      java.sql,
      java.text,
      java.util,
      javax.script,
      javax.swing,
      sun.reflect,
      scala,
      org.scommon
    ]
    allow-classes = [
      net.datenwerke.sandbox.util.VariableAssignment
    ]
    allow-permissions = [
    //Property access
    {
      type    = java.util.PropertyPermission
      name    = "*"
      actions = "read,write"
    }, {
      type    = java.util.PropertyPermission
      name    = java.version
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = java.vendor
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = java.vendor.url
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = java.class.version
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = os.name
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = os.version
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = os.arch
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = file.separator
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = path.separator
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = line.separator
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = java.specification.version
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = java.specification.vendor
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = java.specification.name
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = java.vm.specification.version
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = java.vm.specification.vendor
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = java.vm.specification.name
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = java.vm.version
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = java.vm.vendor
      actions = read
    }, {
      type    = java.util.PropertyPermission
      name    = java.vm.name
      actions = read
    },

    //Reflection
    {
      type    = java.lang.RuntimePermission
      name    = reflectionFactoryAccess
    }, {
      type    = java.lang.RuntimePermission
      name    = accessDeclaredMembers
    }, {
      type    = java.lang.reflect.ReflectPermission
      name    = suppressAccessChecks
    }, {
      type    = java.lang.reflect.AccessDeclaredMemberPermission
    }, {
      type    = java.lang.reflect.SuppressAccessCheckPermission
    }, {
      type    = java.lang.RuntimePermission
      name    = getClassLoader
    }, {
      type    = java.lang.RuntimePermission
      name    = getProtectionDomain
    },

    //Logging
    {
      type    = java.util.logging.LoggingPermission
      name    = control
    }]

    deny-permissions = [
    //Reflection
    {
      type    = java.lang.RuntimePermission
      name    = createClassLoader
    }]
  }]
}
